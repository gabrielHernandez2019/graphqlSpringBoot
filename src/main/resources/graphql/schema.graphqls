
type Query {
    characters: [Character]
    getCharactersGraphQl: ModelRecord
}


type ModelRecord {
	data: DataRecord
}

type DataRecord {
	characters: CharacterRecord 
}

type CharacterRecord {
	results: [ResultRecord]
}

type ResultRecord {
	id:ID!
	name: String
	status: String 
    species: String 
	type: String 
	gender: String
	origin: String 
	location: LocationRecord
	image: String
	episode: [String]
	url: String
	created: String 

}

type LocationRecord {
	id:ID! 
	 name: String
	 type: String 
	 dimension: String 
	 residents: String 
	 url: String
	 created: String
}



type Character{
	id:ID!
	name: String
	status: String 
    species: String 
	type: String 
	gender: String
	origin: String 
	location: Location
	image: String
	episode: [String]
	url: String
	created: String 
}

type Location{
	id:ID!
	name: String
	type: String
	dimension: String
	residents: [String]
	url: [String]
	created: String
}

type Episode{
	id:ID!
	name: String
	air_date: String
	episode: String
	characters: [Character]
	url: [String]
	created: String
}

type Mutation {
	createCharacter(characterInput: CharacterInput!): Character
}

input CharacterInput {
	name: String 
}


